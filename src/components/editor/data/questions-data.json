[
  {
    "id": 1,
    "title": "Phân tích dữ liệu bán hàng",
    "status": "AC",
    "difficulty": "Medium",
    "type": "SELECT",
    "category": "Data Analysis",
    "tags": ["JOIN", "GROUP BY", "DATE_TRUNC"],
    "code": "SELECT\n  DATE_TRUNC('day', opp.created_date)::DATE AS opp_created_date\n,DATE_TRUNC('week',opp.created_date)::DATE AS opp_created_week\n,EXTRACT(DOW FROM opp.created_date::DATE) AS opp_created_dow\n,u.name AS opp_owner\n,opp.stage_name\n,SUM(COALESCE(opp.amount,0)) AS opp_amount\n,COUNT(opp.id) AS opp_count\nFROM opportunity opp\nLEFT JOIN user u ON u.id = opp.owner_id\nWHERE 0=0\n  AND opp.created_date >= CURRENT_DATE - INTERVAL '2 months'\nGROUP BY DATE_TRUNC('day', opp.created_date), DATE_TRUNC('week', opp.created_date), u.name, opp.stage_name\nORDER BY opp_created_date DESC;",
    "description": "Sử dụng SQL để phân tích dữ liệu cơ hội bán hàng trong 2 tháng qua. Truy vấn cần trả về các thông tin sau:\n\n• Ngày tạo cơ hội (theo ngày)\n• Ngày tạo cơ hội (theo tuần) \n• Ngày trong tuần\n• Chủ sở hữu cơ hội\n• Trạng thái cơ hội\n• Tổng giá trị cơ hội\n• Số lượng cơ hội\n\nKết quả cần được nhóm theo ngày, tuần và chủ sở hữu để phân tích hiệu suất bán hàng."
  },
  {
    "id": 2,
    "title": "Thống kê khách hàng theo tháng",
    "status": "WA",
    "difficulty": "Easy",
    "type": "SELECT",
    "category": "Basic Query",
    "tags": ["GROUP BY", "COUNT", "EXTRACT"],
    "code": "SELECT \n  EXTRACT(MONTH FROM created_date) as month,\n  EXTRACT(YEAR FROM created_date) as year,\n  COUNT(*) as customer_count\nFROM customers \nWHERE created_date >= CURRENT_DATE - INTERVAL '12 months'\nGROUP BY EXTRACT(YEAR FROM created_date), EXTRACT(MONTH FROM created_date)\nORDER BY year DESC, month DESC;",
    "description": "Viết truy vấn SQL để thống kê số lượng khách hàng mới theo từng tháng trong năm vừa qua. Kết quả cần hiển thị tháng, năm và số lượng khách hàng tương ứng."
  },
  {
    "id": 3,
    "title": "Top 10 sản phẩm bán chạy",
    "status": "AC",
    "difficulty": "Medium",
    "type": "SELECT",
    "category": "Data Analysis",
    "tags": ["JOIN", "GROUP BY", "ORDER BY", "LIMIT"],
    "code": "SELECT \n  p.product_name,\n  p.category,\n  SUM(oi.quantity) as total_sold,\n  SUM(oi.quantity * oi.price) as revenue,\n  COUNT(DISTINCT oi.order_id) as order_count\nFROM order_items oi\nJOIN products p ON oi.product_id = p.id\nJOIN orders o ON oi.order_id = o.id\nWHERE o.created_date >= CURRENT_DATE - INTERVAL '30 days'\nGROUP BY p.id, p.product_name, p.category\nORDER BY total_sold DESC\nLIMIT 10;",
    "description": "Tìm 10 sản phẩm bán chạy nhất trong tháng vừa qua. Kết quả cần bao gồm tên sản phẩm, danh mục, tổng số lượng bán, doanh thu và số đơn hàng."
  },
  {
    "id": 4,
    "title": "Phân tích xu hướng đơn hàng",
    "status": "TLE",
    "difficulty": "Hard",
    "type": "SELECT",
    "category": "Advanced Query",
    "tags": ["CTE", "WINDOW FUNCTION", "LAG"],
    "code": "WITH daily_orders AS (\n  SELECT \n    DATE_TRUNC('day', created_date) as order_date,\n    COUNT(*) as order_count,\n    SUM(total_amount) as daily_revenue,\n    AVG(total_amount) as avg_order_value\n  FROM orders\n  WHERE created_date >= CURRENT_DATE - INTERVAL '90 days'\n  GROUP BY DATE_TRUNC('day', created_date)\n),\ntrend_analysis AS (\n  SELECT \n    order_date,\n    order_count,\n    daily_revenue,\n    avg_order_value,\n    LAG(order_count, 1) OVER (ORDER BY order_date) as prev_day_orders,\n    LAG(daily_revenue, 1) OVER (ORDER BY order_date) as prev_day_revenue\n  FROM daily_orders\n)\nSELECT \n  order_date,\n  order_count,\n  daily_revenue,\n  avg_order_value,\n  CASE \n    WHEN prev_day_orders > 0 THEN \n      ROUND((order_count - prev_day_orders) * 100.0 / prev_day_orders, 2)\n    ELSE NULL \n  END as order_growth_rate,\n  CASE \n    WHEN prev_day_revenue > 0 THEN \n      ROUND((daily_revenue - prev_day_revenue) * 100.0 / prev_day_revenue, 2)\n    ELSE NULL \n  END as revenue_growth_rate\nFROM trend_analysis\nORDER BY order_date;",
    "description": "Phân tích xu hướng đơn hàng theo ngày trong 90 ngày qua. Tính toán tỷ lệ tăng trưởng so với ngày trước đó cho cả số lượng đơn hàng và doanh thu."
  },
  {
    "id": 5,
    "title": "Báo cáo doanh thu theo khu vực",
    "status": "Not Started",
    "difficulty": "Medium",
    "type": "SELECT",
    "category": "Reporting",
    "tags": ["JOIN", "GROUP BY", "AVG"],
    "code": "SELECT \n  c.region,\n  c.country,\n  COUNT(DISTINCT c.id) as customer_count,\n  COUNT(o.id) as order_count,\n  SUM(o.total_amount) as total_revenue,\n  AVG(o.total_amount) as avg_order_value,\n  SUM(o.total_amount) / COUNT(DISTINCT c.id) as revenue_per_customer\nFROM customers c\nLEFT JOIN orders o ON c.id = o.customer_id\nWHERE o.created_date >= CURRENT_DATE - INTERVAL '6 months'\n  OR o.created_date IS NULL\nGROUP BY c.region, c.country\nHAVING COUNT(o.id) > 0\nORDER BY total_revenue DESC;",
    "description": "Tạo báo cáo doanh thu theo khu vực và quốc gia trong 6 tháng qua. Bao gồm số lượng khách hàng, đơn hàng, tổng doanh thu và các chỉ số trung bình."
  },
  {
    "id": 6,
    "title": "Phân tích churn rate khách hàng",
    "status": "AC",
    "difficulty": "Hard",
    "type": "SELECT",
    "category": "Advanced Analysis",
    "tags": ["CTE", "CASE WHEN", "Subquery"],
    "code": "WITH customer_activity AS (\n  SELECT \n    customer_id,\n    MAX(created_date) as last_order_date,\n    MIN(created_date) as first_order_date,\n    COUNT(*) as total_orders,\n    SUM(total_amount) as lifetime_value\n  FROM orders\n  GROUP BY customer_id\n),\nchurn_analysis AS (\n  SELECT \n    customer_id,\n    last_order_date,\n    first_order_date,\n    total_orders,\n    lifetime_value,\n    CASE \n      WHEN last_order_date < CURRENT_DATE - INTERVAL '90 days' THEN 1 \n      ELSE 0 \n    END as is_churned,\n    CASE \n      WHEN last_order_date < CURRENT_DATE - INTERVAL '90 days' THEN 'Churned'\n      WHEN last_order_date >= CURRENT_DATE - INTERVAL '30 days' THEN 'Active'\n      ELSE 'At Risk'\n    END as customer_status\n  FROM customer_activity\n)\nSELECT \n  customer_status,\n  COUNT(*) as customer_count,\n  AVG(total_orders) as avg_orders_per_customer,\n  AVG(lifetime_value) as avg_lifetime_value,\n  ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (), 2) as percentage\nFROM churn_analysis\nGROUP BY customer_status\nORDER BY \n  CASE customer_status \n    WHEN 'Active' THEN 1\n    WHEN 'At Risk' THEN 2\n    WHEN 'Churned' THEN 3\n  END;",
    "description": "Phân tích tỷ lệ churn rate và phân loại khách hàng thành các nhóm: Active, At Risk, và Churned. Tính toán các chỉ số lifetime value và số đơn hàng trung bình cho mỗi nhóm."
  },
  {
    "id": 7,
    "title": "Cập nhật giá sản phẩm theo danh mục",
    "status": "WA",
    "difficulty": "Medium",
    "type": "UPDATE",
    "category": "Data Modification",
    "tags": ["UPDATE", "JOIN", "CASE WHEN"],
    "code": "UPDATE products \nSET \n  price = CASE \n    WHEN category = 'Electronics' THEN price * 1.15\n    WHEN category = 'Clothing' THEN price * 1.10\n    WHEN category = 'Books' THEN price * 1.05\n    ELSE price * 1.08\n  END,\n  updated_date = CURRENT_TIMESTAMP,\n  updated_by = 'system'\nWHERE \n  status = 'active'\n  AND last_updated < CURRENT_DATE - INTERVAL '6 months'\n  AND price > 0;",
    "description": "Cập nhật giá sản phẩm theo danh mục với tỷ lệ tăng khác nhau:\n• Electronics: tăng 15%\n• Clothing: tăng 10%\n• Books: tăng 5%\n• Các danh mục khác: tăng 8%\n\nChỉ cập nhật những sản phẩm đang hoạt động và chưa được cập nhật trong 6 tháng qua."
  },
  {
    "id": 8,
    "title": "Xóa đơn hàng cũ và dữ liệu liên quan",
    "status": "Not Started",
    "difficulty": "Hard",
    "type": "DELETE",
    "category": "Data Cleanup",
    "tags": ["DELETE", "JOIN", "Cascading"],
    "code": "-- Xóa order items trước\nDELETE FROM order_items \nWHERE order_id IN (\n  SELECT id \n  FROM orders \n  WHERE status = 'cancelled' \n    AND created_date < CURRENT_DATE - INTERVAL '2 years'\n);\n\n-- Xóa shipping records\nDELETE FROM shipping_records \nWHERE order_id IN (\n  SELECT id \n  FROM orders \n  WHERE status = 'cancelled' \n    AND created_date < CURRENT_DATE - INTERVAL '2 years'\n);\n\n-- Cuối cùng xóa orders\nDELETE FROM orders \nWHERE status = 'cancelled' \n  AND created_date < CURRENT_DATE - INTERVAL '2 years'\n  AND id NOT IN (\n    SELECT DISTINCT order_id \n    FROM order_items \n    WHERE order_id IS NOT NULL\n  );",
    "description": "Xóa các đơn hàng đã bị hủy và cũ hơn 2 năm cùng với tất cả dữ liệu liên quan. Thực hiện theo thứ tự để tránh vi phạm foreign key constraints:\n1. Xóa order_items\n2. Xóa shipping_records\n3. Xóa orders\n\nĐảm bảo không xóa nhầm đơn hàng còn có dữ liệu liên quan."
  },
  {
    "id": 9,
    "title": "Thêm khách hàng mới với ưu đãi",
    "status": "AC",
    "difficulty": "Easy",
    "type": "INSERT",
    "category": "Data Entry",
    "tags": ["INSERT", "VALUES", "Multiple Records"],
    "code": "-- Thêm khách hàng mới\nINSERT INTO customers (\n  first_name, \n  last_name, \n  email, \n  phone, \n  address, \n  city, \n  country, \n  registration_source,\n  created_date,\n  status\n) VALUES \n  ('Nguyễn', 'Văn A', 'nguyenvana@email.com', '0901234567', '123 Đường ABC', 'Hà Nội', 'Vietnam', 'website', CURRENT_TIMESTAMP, 'active'),\n  ('Trần', 'Thị B', 'tranthib@email.com', '0907654321', '456 Đường XYZ', 'Hồ Chí Minh', 'Vietnam', 'mobile_app', CURRENT_TIMESTAMP, 'active'),\n  ('Lê', 'Văn C', 'levanc@email.com', '0903456789', '789 Đường DEF', 'Đà Nẵng', 'Vietnam', 'social_media', CURRENT_TIMESTAMP, 'active');\n\n-- Thêm mã giảm giá cho khách hàng mới\nINSERT INTO customer_coupons (customer_id, coupon_code, discount_percent, valid_until, status)\nSELECT \n  id as customer_id,\n  'WELCOME2024' as coupon_code,\n  20 as discount_percent,\n  CURRENT_DATE + INTERVAL '30 days' as valid_until,\n  'active' as status\nFROM customers \nWHERE created_date >= CURRENT_DATE\n  AND registration_source IN ('website', 'mobile_app', 'social_media');",
    "description": "Thêm khách hàng mới vào hệ thống và tự động tạo mã giảm giá chào mừng. Bao gồm:\n• Thêm thông tin khách hàng cơ bản\n• Tự động tạo mã giảm giá 20% cho khách hàng mới\n• Mã giảm giá có hiệu lực 30 ngày\n• Chỉ áp dụng cho khách hàng đăng ký qua website, app hoặc social media"
  },
  {
    "id": 10,
    "title": "Tạo bảng báo cáo doanh thu tháng",
    "status": "WA",
    "difficulty": "Medium",
    "type": "CREATE",
    "category": "DDL",
    "tags": ["CREATE TABLE", "INDEX", "Constraints"],
    "code": "-- Tạo bảng báo cáo doanh thu theo tháng\nCREATE TABLE monthly_revenue_report (\n  id SERIAL PRIMARY KEY,\n  report_month DATE NOT NULL,\n  region VARCHAR(100) NOT NULL,\n  product_category VARCHAR(100) NOT NULL,\n  total_orders INTEGER DEFAULT 0,\n  total_revenue DECIMAL(15,2) DEFAULT 0,\n  avg_order_value DECIMAL(10,2) DEFAULT 0,\n  unique_customers INTEGER DEFAULT 0,\n  growth_rate DECIMAL(5,2) DEFAULT 0,\n  created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  updated_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  \n  -- Constraints\n  CONSTRAINT uk_monthly_report UNIQUE (report_month, region, product_category),\n  CONSTRAINT chk_positive_values CHECK (\n    total_orders >= 0 AND \n    total_revenue >= 0 AND \n    avg_order_value >= 0 AND \n    unique_customers >= 0\n  )\n);\n\n-- Tạo indexes để tối ưu query\nCREATE INDEX idx_monthly_report_month ON monthly_revenue_report(report_month);\nCREATE INDEX idx_monthly_report_region ON monthly_revenue_report(region);\nCREATE INDEX idx_monthly_report_category ON monthly_revenue_report(product_category);\n\n-- Tạo trigger để tự động cập nhật updated_date\nCREATE OR REPLACE FUNCTION update_monthly_report_timestamp()\nRETURNS TRIGGER AS $$\nBEGIN\n  NEW.updated_date = CURRENT_TIMESTAMP;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trg_update_monthly_report_timestamp\n  BEFORE UPDATE ON monthly_revenue_report\n  FOR EACH ROW\n  EXECUTE FUNCTION update_monthly_report_timestamp();",
    "description": "Tạo bảng để lưu trữ báo cáo doanh thu theo tháng với các tính năng:\n• Lưu trữ dữ liệu báo cáo theo tháng, khu vực và danh mục sản phẩm\n• Ràng buộc dữ liệu để đảm bảo tính nhất quán\n• Index để tối ưu hiệu suất truy vấn\n• Trigger tự động cập nhật thời gian chỉnh sửa\n• Unique constraint để tránh trùng lặp dữ liệu"
  },
  {
    "id": 11,
    "title": "Stored Procedure tính commission",
    "status": "TLE",
    "difficulty": "Hard",
    "type": "PROCEDURE",
    "category": "Stored Procedures",
    "tags": ["CREATE PROCEDURE", "Parameters", "Loops"],
    "code": "CREATE OR REPLACE FUNCTION calculate_sales_commission(\n  p_sales_person_id INTEGER,\n  p_month DATE DEFAULT CURRENT_DATE\n)\nRETURNS TABLE(\n  sales_person_id INTEGER,\n  month_year DATE,\n  total_sales DECIMAL(15,2),\n  commission_rate DECIMAL(5,4),\n  commission_amount DECIMAL(15,2),\n  bonus_amount DECIMAL(15,2),\n  total_commission DECIMAL(15,2)\n) AS $$\nDECLARE\n  v_sales_amount DECIMAL(15,2);\n  v_commission_rate DECIMAL(5,4);\n  v_bonus_amount DECIMAL(15,2) := 0;\nBEGIN\n  -- Tính tổng doanh số trong tháng\n  SELECT COALESCE(SUM(o.total_amount), 0)\n  INTO v_sales_amount\n  FROM orders o\n  WHERE o.sales_person_id = p_sales_person_id\n    AND DATE_TRUNC('month', o.created_date) = DATE_TRUNC('month', p_month)\n    AND o.status = 'completed';\n  \n  -- Xác định tỷ lệ hoa hồng dựa trên doanh số\n  v_commission_rate := CASE \n    WHEN v_sales_amount >= 100000 THEN 0.08\n    WHEN v_sales_amount >= 50000 THEN 0.06\n    WHEN v_sales_amount >= 25000 THEN 0.04\n    ELSE 0.02\n  END;\n  \n  -- Tính bonus nếu vượt target\n  IF v_sales_amount >= 100000 THEN\n    v_bonus_amount := (v_sales_amount - 100000) * 0.01;\n  END IF;\n  \n  -- Trả về kết quả\n  RETURN QUERY\n  SELECT \n    p_sales_person_id,\n    DATE_TRUNC('month', p_month)::DATE,\n    v_sales_amount,\n    v_commission_rate,\n    v_sales_amount * v_commission_rate,\n    v_bonus_amount,\n    (v_sales_amount * v_commission_rate) + v_bonus_amount;\nEND;\n$$ LANGUAGE plpgsql;",
    "description": "Tạo stored procedure để tính hoa hồng cho nhân viên bán hàng dựa trên doanh số tháng:\n• Tính tổng doanh số của nhân viên trong tháng\n• Xác định tỷ lệ hoa hồng theo bậc:\n  - Dưới 25K: 2%\n  - 25K-50K: 4%\n  - 50K-100K: 6%\n  - Trên 100K: 8%\n• Tính bonus 1% cho phần doanh số vượt 100K\n• Trả về báo cáo chi tiết hoa hồng"
  },
  {
    "id": 12,
    "title": "Liệt kê 2 khóa học theo tên giảng viên (sắp xếp theo tên giảm dần)",
    "status": "AC",
    "difficulty": "Medium",
    "type": "INDEX",
    "category": "Performance Optimization",
    "tags": ["CREATE INDEX", "Composite Index", "Performance"],
    "code": "-- Index cho bảng orders (truy vấn theo customer và date)\nCREATE INDEX idx_orders_customer_date ON orders(customer_id, created_date DESC);\n\n-- Index cho bảng order_items (truy vấn theo product)\nCREATE INDEX idx_order_items_product_order ON order_items(product_id, order_id);\n\n-- Composite index cho tìm kiếm sản phẩm\nCREATE INDEX idx_products_category_status_price ON products(category, status, price);\n\n-- Index cho báo cáo doanh thu theo thời gian\nCREATE INDEX idx_orders_date_status_amount ON orders(DATE(created_date), status, total_amount);\n\n-- Partial index cho đơn hàng hoàn thành\nCREATE INDEX idx_orders_completed_date ON orders(created_date) \nWHERE status = 'completed';\n\n-- Index cho text search trên tên khách hàng\nCREATE INDEX idx_customers_name_search ON customers \nUSING gin(to_tsvector('english', first_name || ' ' || last_name));\n\n-- Index cho email lookup (thường dùng cho login)\nCREATE UNIQUE INDEX idx_customers_email_active ON customers(email) \nWHERE status = 'active';\n\n-- Analyze tables để cập nhật statistics\nANALYZE orders;\nANALYZE order_items;\nANALYZE products;\nANALYZE customers;",
    "description": "Tạo các chỉ mục để tối ưu hiệu suất cho các truy vấn thường dùng:\n• Index composite cho truy vấn đơn hàng theo khách hàng và ngày\n• Index cho lookup sản phẩm theo danh mục và trạng thái\n• Partial index cho đơn hàng đã hoàn thành\n• Full-text search index cho tên khách hàng\n• Unique index cho email của khách hàng đang hoạt động\n• Analyze tables để cập nhật thống kê cho query planner"
  }
]
